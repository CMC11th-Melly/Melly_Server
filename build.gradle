plugins {
    id 'java-library'
    id 'org.springframework.boot' apply(false)
    id 'io.spring.dependency-management'
    id 'io.spring.javaformat' apply(false)
    id 'org.asciidoctor.jvm.convert' apply(false)
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10" apply false
}

allprojects {
    group = "${projectGroup}"
    version = "${applicationVersion}"
    sourceCompatibility = project.javaVersion

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.jvm.convert'


    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudDependenciesVersion}"
        }
    }


    dependencies {

        // Lombok
        implementation 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'

        // QueryDsl


//        implementation("org.glassfish.jaxb:jaxb-runtime:4.0.3")
//        implementation("jakarta.xml.bind:jakarta.xml.bind-api:4.0.0")

        testAnnotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation group: 'org.testcontainers', name: 'testcontainers', version: '1.17.2'
        testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.8.0'
        testImplementation "com.h2database:h2"
    }

    bootJar.enabled = false
    jar.enabled = true

    test {
        useJUnitPlatform {
            excludeTags('develop', 'restdocs')
        }
    }

    tasks.register('unitTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            excludeTags('develop', 'context', 'restdocs')
        }
    }

    tasks.register('contextTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('context')
        }
    }

    tasks.register('restDocsTest', Test) {
        group = 'verification'
        useJUnitPlatform {
            includeTags('restdocs')
        }
    }


    tasks.named('asciidoctor') {
        dependsOn restDocsTest
    }


}

// Sub-Module 적용
task copyPrivate(type: Copy) {
    copy {
        from './lib'
        include "*.yml", "*.json"
        into 'core/core-api/src/main/resources'
    }
}
