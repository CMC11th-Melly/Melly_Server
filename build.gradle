plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'jacoco'
}

group = 'cmc'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

jar {
    enabled = false
}

jacoco {
    // JaCoCo 버전
    toolVersion = '0.8.5'

//  테스트결과 리포트를 저장할 경로 변경
//  default는 "$/jacoco"
//  reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        // 원하는 리포트를 켜고 끌 수 있습니다.
        html.enabled true
        xml.enabled false
        csv.enabled false

//  각 리포트 타입 마다 리포트 저장 경로를 설정할 수 있습니다.
//  html.destination file("$buildDir/jacocoHtml")
//  xml.destination file("$buildDir/jacoco.xml")
    }
    finalizedBy 'jacocoTestCoverageVerification'
}


jacocoTestCoverageVerification {
    // 이 커버리지 기준은 이 글의 맨 아래에서 다시 설명하겠습니다.
    violationRules {
        rule {
            element = 'CLASS'

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.00
            }
            excludes = [
               '*.test.*',
               'Q*.class'
            ]
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Swagger UI
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.9'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-security', version: '1.6.9'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-data-rest', version: '1.6.9'

    // redis config
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'it.ozimov:embedded-redis:0.7.2'

    // webflux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.2.2'
    // mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // swagger
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.6.9'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-security', version: '1.6.9'


    // validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // AWS
    implementation 'io.awspring.cloud:spring-cloud-starter-aws:2.3.1'
    implementation group: 'ca.pjer', name: 'logback-awslogs-appender', version: '1.6.0'
    implementation 'org.codehaus.janino:janino:3.1.7'

    // FCM
    implementation 'com.google.firebase:firebase-admin:7.1.1'

    // Authentication
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:2.3.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Data
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'
    runtimeOnly 'mysql:mysql-connector-java'
    implementation group: 'org.hibernate', name: 'hibernate-spatial', version: '5.6.10.Final'
    
    // Core
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.tngtech.archunit:archunit-junit4:1.0.0-rc1'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '4.8.0'
    testImplementation group: 'org.springframework.security', name: 'spring-security-test', version: '5.7.3'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // Emoji parser
    implementation 'com.vdurmont:emoji-java:5.1.1'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
}

task testCoverage(type: Test) {
    group 'verification'
    description 'Runs the unit tests with coverage'

    dependsOn(':test',
            ':jacocoTestReport',
            ':jacocoTestCoverageVerification')

    tasks['jacocoTestReport'].mustRunAfter(tasks['test'])
    tasks['jacocoTestCoverageVerification'].mustRunAfter(tasks['jacocoTestReport'])
}

clean {
    delete file('src/main/generated')
}
