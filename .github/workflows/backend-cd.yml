name: Melly Backend CD
on:
  push:
    branches: [ develop ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: 저장소 Checkout
        uses: actions/checkout@v3

      - name: 스프링부트 애플리케이션 빌드
        run: ./gradlew build -x test

      - name: 도커 이미지 빌드
        run: docker build -t sjmin/melly .
        #
      - name: Docker Hub 로그인
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        #
      - name: Docker Hub 퍼블리시
        run: docker push sjmin/melly


          #      - name: Send deploy.sh
          #        uses: appleboy/scp-action@master
          #        with:
          #          username: ubuntu
          #          host: ${{ secrets.EC2_HOST }}
          #          key: ${{ secrets.EC2_PRIVATE_KEY }}
          #          port: 22
          #          source: "./deploy.sh"
          #          target: "/home/ubuntu/"



      - name: Deploy to Dev
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.EC2_HOST }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          script: |
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
            chmod 777 ./deploy.sh
            ./deploy.sh
            docker image prune -f
#
#      - name: 도커 이미지 빌드
#        run: docker build -t sjmin/melly .
#
#      - name: Docker Hub 로그인
#        uses: docker/login-action@v2
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#
#      - name: Docker Hub 퍼블리시
#        run: docker push sjmin/melly
#
#      - name: WAS 인스턴스 접속 및 애플리케이션 실행
#        uses: appleboy/ssh-action@v0.1.6
#        with:
#          host: ${{ secrets.WAS_HOST }}
#          username: ${{ secrets.WAS_USERNAME }}
#          key: ${{ secrets.PRIVATE_KEY }}
#          port: ${{ secrets.WAS_SSH_PORT }}
#          script: |
#            docker stop $(docker ps -a -q)
#            docker rm $(docker ps -a -q)
#            docker pull sjmin/melly
#            docker run -d -p 8081:8080 --name melly-prod --env-file .env sjmin/melly