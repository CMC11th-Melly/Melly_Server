plugins {
    id 'java-test-fixtures'
}

dependencies {

    /*
    > api 의존성 사용 이유
    api는 implementation과 다르게 현재 모듈을 사용하는 컨슈머 모듈에 라이브러리 의존성이 컴파일타임에 유입됩니다.
    현재 Melly 프로젝트에는 core-api 모듈에서 db-core 모듈의 Repository를 직접 사용합니다.
    따라서 core-api 모듈도 컴파일타임에 JPA 의존성이 필요하기에 api를 통해 JPA 의존성을 설정했습니다.
    차후 레포지토리를 별도의 인터페이스로 한번 더 추상화한다면 core-api에서 JPA 의존성을 제거할 수 있습니다.
     */
    api 'org.springframework.boot:spring-boot-starter-data-jpa'

    /*
     db-core 모듈에는 MySQL 드라이버와 H2 드라이버 의존성이 RuntimeOnly로 추가됩니다.
     DB 드라이버의 경우 컴파일 타임에는 내 코드 상에서 직접적으로 Import 해서 사용하지 않기 때문에 implementation으로 의존성을 받을 필요는 없습니다.
     하지만 빌드 결과물에는 포함이 되야 런타임에서 사용이 가능하기 때문에 runtimeOnly로 드라이버 2개를 포함했습니다.
     */
    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'

    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"


}

